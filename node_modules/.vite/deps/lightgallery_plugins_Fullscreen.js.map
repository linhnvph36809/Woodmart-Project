{
  "version": 3,
  "sources": ["../../src/plugins/fullscreen/lg-fullscreen-settings.ts", "../../src/plugins/fullscreen/lg-fullscreen.ts"],
  "sourcesContent": ["export interface FullscreenStrings {\n    toggleFullscreen: string;\n}\nexport interface FullscreenSettings {\n    /**\n     * Enable/Disable fullscreen option\n     */\n    fullScreen: boolean;\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    fullscreenPluginStrings: FullscreenStrings;\n}\n\nexport const fullscreenSettings: FullscreenSettings = {\n    fullScreen: true,\n    fullscreenPluginStrings: {\n        toggleFullscreen: 'Toggle Fullscreen',\n    } as FullscreenStrings,\n};\n", "import { LgQuery } from '../../lgQuery';\nimport { LightGallery } from '../../lightgallery';\nimport {\n    FullscreenSettings,\n    fullscreenSettings,\n} from './lg-fullscreen-settings';\n\ndeclare let document: any;\n\nexport default class FullScreen {\n    core: LightGallery;\n    settings: FullscreenSettings;\n    private $LG!: LgQuery;\n    constructor(instance: LightGallery, $LG: LgQuery) {\n        // get lightGallery core plugin instance\n        this.core = instance;\n        this.$LG = $LG;\n\n        // extend module default settings with lightGallery core settings\n        this.settings = { ...fullscreenSettings, ...this.core.settings };\n\n        return this;\n    }\n\n    public init(): void {\n        let fullScreen = '';\n        if (this.settings.fullScreen) {\n            // check for fullscreen browser support\n            if (\n                !document.fullscreenEnabled &&\n                !document.webkitFullscreenEnabled &&\n                !document.mozFullScreenEnabled &&\n                !document.msFullscreenEnabled\n            ) {\n                return;\n            } else {\n                fullScreen = `<button type=\"button\" aria-label=\"${this.settings.fullscreenPluginStrings['toggleFullscreen']}\" class=\"lg-fullscreen lg-icon\"></button>`;\n                this.core.$toolbar.append(fullScreen);\n                this.fullScreen();\n            }\n        }\n    }\n\n    private isFullScreen(): boolean {\n        return (\n            document.fullscreenElement ||\n            document.mozFullScreenElement ||\n            document.webkitFullscreenElement ||\n            document.msFullscreenElement\n        );\n    }\n\n    private requestFullscreen(): void {\n        const el = document.documentElement;\n        if (el.requestFullscreen) {\n            el.requestFullscreen();\n        } else if (el.msRequestFullscreen) {\n            el.msRequestFullscreen();\n        } else if (el.mozRequestFullScreen) {\n            el.mozRequestFullScreen();\n        } else if (el.webkitRequestFullscreen) {\n            el.webkitRequestFullscreen();\n        }\n    }\n\n    private exitFullscreen(): void {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\n    private fullScreen(): void {\n        this.$LG(document).on(\n            `fullscreenchange.lg.global${this.core.lgId} \n            webkitfullscreenchange.lg.global${this.core.lgId} \n            mozfullscreenchange.lg.global${this.core.lgId} \n            MSFullscreenChange.lg.global${this.core.lgId}`,\n            () => {\n                if (!this.core.lgOpened) return;\n                this.core.outer.toggleClass('lg-fullscreen-on');\n            },\n        );\n\n        this.core.outer\n            .find('.lg-fullscreen')\n            .first()\n            .on('click.lg', () => {\n                if (this.isFullScreen()) {\n                    this.exitFullscreen();\n                } else {\n                    this.requestFullscreen();\n                }\n            });\n    }\n\n    closeGallery(): void {\n        // exit from fullscreen if activated\n        if (this.isFullScreen()) {\n            this.exitFullscreen();\n        }\n    }\n\n    destroy(): void {\n        this.$LG(document).off(\n            `fullscreenchange.lg.global${this.core.lgId} \n            webkitfullscreenchange.lg.global${this.core.lgId} \n            mozfullscreenchange.lg.global${this.core.lgId} \n            MSFullscreenChange.lg.global${this.core.lgId}`,\n        );\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAeO,IAAM,qBAAyC;EAClD,YAAY;EACZ,yBAAyB;IACrB,kBAAkB;;;;;;ACLtB,aAAAA,YAAY,UAAwB,KAAY;AAE5C,WAAK,OAAO;AACZ,WAAK,MAAM;AAGX,WAAK,WAAQ,SAAA,SAAA,CAAA,GAAQ,kBAAkB,GAAK,KAAK,KAAK,QAAQ;AAE9D,aAAO;;AAGJ,IAAAA,YAAA,UAAA,OAAP,WAAA;AACI,UAAI,aAAa;AACjB,UAAI,KAAK,SAAS,YAAY;AAE1B,YACI,CAAC,SAAS,qBACV,CAAC,SAAS,2BACV,CAAC,SAAS,wBACV,CAAC,SAAS,qBACZ;AACE;eACG;AACH,uBAAa,uCAAqC,KAAK,SAAS,wBAAwB,kBAAkB,IAAC;AAC3G,eAAK,KAAK,SAAS,OAAO,UAAU;AACpC,eAAK,WAAU;;;;AAKnB,IAAAA,YAAA,UAAA,eAAR,WAAA;AACI,aACI,SAAS,qBACT,SAAS,wBACT,SAAS,2BACT,SAAS;;AAIT,IAAAA,YAAA,UAAA,oBAAR,WAAA;AACI,UAAM,KAAK,SAAS;AACpB,UAAI,GAAG,mBAAmB;AACtB,WAAG,kBAAiB;iBACb,GAAG,qBAAqB;AAC/B,WAAG,oBAAmB;iBACf,GAAG,sBAAsB;AAChC,WAAG,qBAAoB;iBAChB,GAAG,yBAAyB;AACnC,WAAG,wBAAuB;;;AAI1B,IAAAA,YAAA,UAAA,iBAAR,WAAA;AACI,UAAI,SAAS,gBAAgB;AACzB,iBAAS,eAAc;iBAChB,SAAS,kBAAkB;AAClC,iBAAS,iBAAgB;iBAClB,SAAS,qBAAqB;AACrC,iBAAS,oBAAmB;iBACrB,SAAS,sBAAsB;AACtC,iBAAS,qBAAoB;;;AAK7B,IAAAA,YAAA,UAAA,aAAR,WAAA;AAAA,UAAA,QAAA;AACI,WAAK,IAAI,QAAQ,EAAE,GACf,+BAA6B,KAAK,KAAK,OAAI,oDACT,KAAK,KAAK,OAAI,iDACjB,KAAK,KAAK,OAAI,gDACf,KAAK,KAAK,MACxC,WAAA;AACI,YAAI,CAAC,MAAK,KAAK;AAAU;AACzB,cAAK,KAAK,MAAM,YAAY,kBAAkB;OACjD;AAGL,WAAK,KAAK,MACL,KAAK,gBAAgB,EACrB,MAAK,EACL,GAAG,YAAY,WAAA;AACZ,YAAI,MAAK,aAAY,GAAI;AACrB,gBAAK,eAAc;eAChB;AACH,gBAAK,kBAAiB;;OAE7B;;AAGT,IAAAA,YAAA,UAAA,eAAA,WAAA;AAEI,UAAI,KAAK,aAAY,GAAI;AACrB,aAAK,eAAc;;;AAI3B,IAAAA,YAAA,UAAA,UAAA,WAAA;AACI,WAAK,IAAI,QAAQ,EAAE,IACf,+BAA6B,KAAK,KAAK,OAAI,oDACT,KAAK,KAAK,OAAI,iDACjB,KAAK,KAAK,OAAI,gDACf,KAAK,KAAK,IAAM;;AAG1D,WAAAA;EAAA,EAAC;;;",
  "names": ["FullScreen"]
}
